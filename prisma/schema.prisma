// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  email     String    @unique @db.VarChar(100)
  password  String    @db.VarChar(1024)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")

  roles     UserRole[]
  auditLogs AuditLog[]
}

model Role {
  id          Int             @id @default(autoincrement())
  roleName    String          @unique @db.VarChar(50) @map("role_name")
  description String?         @db.Text
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @default(now()) @updatedAt @map("updated_at")

  users       UserRole[]
  permissions RolePermission[]
}

model Permission {
  id              Int             @id @default(autoincrement())
  permissionName  String          @unique @db.VarChar(50) @map("permission_name")
  description     String?         @db.Text
  createdAt       DateTime        @default(now()) @map("created_at")
  updatedAt       DateTime        @default(now()) @updatedAt @map("updated_at")

  roles           RolePermission[]
}

model UserRole {
  userId Int @map("user_id")
  roleId Int @map("role_id")

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

model RolePermission {
  roleId       Int @map("role_id")
  permissionId Int @map("permission_id")

  role        Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission  Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  userId      Int?     @map("user_id")
  action      String   @db.VarChar(100)
  resource    String?  @db.VarChar(100)
  resourceId  Int?     @map("resource_id")
  timestamp   DateTime @default(now())
  details     Json?    @db.JsonB

  user        User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
}


